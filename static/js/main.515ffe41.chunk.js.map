{"version":3,"sources":["image/wallpaper.jpg","component/ethOperations.tsx","component/taskbar.tsx","component/desktop.tsx","component/modalConnectionFail.tsx","component/modalMint.tsx","component/modalPotatoPreview.tsx","component/modalPotatoLore.tsx","image/construction.gif","component/modalUnderConstruction.tsx","component/modalWww.tsx","page/Home.tsx","App.tsx","index.tsx"],"names":["injected","InjectedConnector","supportedChainIds","Taskbar","setShowConnectionFail","setShowMint","setShowPotatoLore","setShowUnderConstruction","setShowPotatoPreview","setShowWww","useState","first","toggleFirst","second","toggleSecond","Modal","icon","variant","title","closeModal","width","height","defaultPosition","x","y","hasWindowButton","TaskBar","list","List","Item","onClick","href","target","Divider","Desktop","StyledDesktop","StyledShorcut","className","Spacer","styled","div","Cursor","Pointer","ModalConnectionFail","setShow","buttons","value","Frame","padding","boxShadow","bg","ModalMint","ModalPotatoPreview","ModalPotatoLore","text","setValue","tokenInfo","setTokenInfo","Tabs","style","defaultActiveTab","Tab","TextArea","rows","cols","onChange","randomInteger","min","max","Math","floor","random","ModalUnderConstruction","setX","setY","useEffect","StyledMessage","src","construction","alt","ModalWww","HomePage","activate","useWeb3React","setActivateAttempted","showConnectionFail","showMint","showPotatoLore","showPotatoPreview","showUnderConstruction","showWww","isAuthorized","then","undefined","catch","AppStyleOverrides","wallpaper","Auto","App","getLibrary","provider","connector","library","ethers","providers","Web3Provider","pollingInterval","ThemeProvider","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.515ffe41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wallpaper.45442a57.jpg\";","import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3] });\n\nexport function blockNumber() {\n    return '';\n}","import React, { useState } from 'react';\nimport { Modal, TaskBar, List } from '@react95/core';\nimport { \n    ReaderClosed, \n    WindowsExplorer, \n    Computer3, \n    FolderExe2, \n    Pbrush1, \n    HelpBook, \n    Msnstart120, \n    Network3,\n    Mmsys108, \n    Textchat2, \n    Camera, \n    ReaderCd\n} from '@react95/icons';\n\ntype ModalsType = {\n    setShowConnectionFail: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowMint: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoLore: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoPreview: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowUnderConstruction: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowWww: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function Taskbar({\n    setShowConnectionFail,\n    setShowMint,\n    setShowPotatoLore,\n    setShowPotatoPreview,\n    setShowUnderConstruction,\n    setShowWww\n}: ModalsType) {\n    const [first, toggleFirst] = useState(false);\n    const [second, toggleSecond] = useState(false);\n    \n    const closeFirst = () => toggleFirst(false);\n    const closeSecond = () => toggleSecond(false);\n    \n    return (\n        <>\n            {first && (\n                <Modal\n                    icon={<WindowsExplorer variant=\"16x16_4\" />}\n                    title=\"Windows Explorer\"\n                    closeModal={closeFirst}\n                    width=\"300\"\n                    height=\"200\"\n                />\n            )}\n        \n            {second && (\n                <Modal\n                    defaultPosition={{ x: 50, y: 50 }}\n                    width=\"300\"\n                    height=\"200\"\n                    icon={<ReaderClosed variant=\"16x16_4\" />}\n                    title=\"Local Disk (C:)\"\n                    closeModal={closeSecond}\n                    hasWindowButton={true}\n                />\n            )}\n            <TaskBar\n                list={\n                    <List>\n                        <List.Item icon={<FolderExe2 variant=\"32x32_4\" />}>\n                            <List>\n                                <List.Item icon={<Pbrush1 variant=\"32x32_4\" />} onClick={() => setShowUnderConstruction(true)}>\n                                    Mint.exe\n                                </List.Item>\n                            </List>\n                            Programs\n                        </List.Item>\n\n                        <List.Item icon={<Msnstart120 variant=\"32x32_4\" />} onClick={() => { setShowWww(true); }}>\n                            World Wide Web\n                        </List.Item>\n\n                        <List.Item icon={<Network3 variant=\"32x32_4\" />}>\n                            <List>\n                                <a href=\"https://twitter.com/papertato\" target=\"_blank\">\n                                    <List.Item icon={<Textchat2 variant=\"32x32_4\" />}>\n                                            Twitter.html\n                                    </List.Item>\n                                </a>\n                                <List.Item icon={<Mmsys108 variant=\"32x32_4\" />} onClick={() => setShowUnderConstruction(true)}>\n                                    Discord.js\n                                </List.Item>\n                                <a href=\"https://www.instagram.com/makepotato/\" target=\"_blank\">\n                                    <List.Item icon={<Camera variant=\"32x32_4\" />}>\n                                        Instagram.php\n                                    </List.Item>\n                                </a>\n                            </List>\n                            Social\n                        </List.Item>\n\n                        <List.Item icon={<HelpBook variant=\"32x32_4\" />} onClick={() => { setShowPotatoLore(true); }}>\n                            About\n                        </List.Item>\n\n                        <List.Divider />\n                        \n                        <List.Item icon={<Computer3 variant=\"32x32_4\" />} onClick={() => { setShowUnderConstruction(true); }}>\n                            Shut Down...\n                        </List.Item>\n                    </List>\n                }\n            />\n        </>\n    );\n      \n}\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Mmsys108, Pbrush1, Textchat2, Camera, ReaderCd } from '@react95/icons';\nimport { Cursor } from '@react95/core';\n\ntype ModalsType = {\n    setShowConnectionFail: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowMint: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoLore: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoPreview: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowUnderConstruction: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowWww: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function Desktop({\n    setShowConnectionFail,\n    setShowMint,\n    setShowPotatoLore,\n    setShowPotatoPreview,\n    setShowUnderConstruction,\n    setShowWww\n}: ModalsType) {\n\n    return (\n        <>\n            <StyledDesktop>\n                <StyledShorcut onClick={() => setShowUnderConstruction(true)}>\n                    <Pbrush1\n                        className=\"pointer\"\n                        onClick={() => {}}\n                        variant=\"32x32_4\"\n                    />\n                    <div>Mint.exe</div>\n                </StyledShorcut>\n\n                <StyledShorcut onClick={() => setShowUnderConstruction(true)}>\n                    <ReaderCd\n                        className=\"pointer\"\n                        onClick={() => {}}\n                        variant=\"32x32_4\"\n                    />\n                    <div>Potato Nudes (D:)</div>\n                </StyledShorcut>\n\n                <Spacer />\n\n                <a href=\"https://twitter.com/papertato\" target=\"_blank\">\n                    <StyledShorcut>\n                        <Textchat2\n                            className=\"pointer\"\n                            onClick={() => {}}\n                            variant=\"32x32_4\"\n                        />\n                        <div>Twitter.html</div>\n                    </StyledShorcut>\n                </a>\n\n                <StyledShorcut onClick={() => setShowUnderConstruction(true)}>\n                    <Mmsys108\n                        className=\"pointer\"\n                        onClick={() => {}}\n                        variant=\"32x32_4\"\n                    />\n                    <div>Discord.js</div>\n                </StyledShorcut>\n\n                <a href=\"https://www.instagram.com/makepotato/\" target=\"_blank\">\n                    <StyledShorcut>\n                        <Camera\n                            className=\"pointer\"\n                            onClick={() => {}}\n                            variant=\"32x32_4\"\n                        />\n                        <div>Instagram.php</div>\n                    </StyledShorcut>\n                </a>\n            </StyledDesktop>\n        </>\n    );\n} \n\n\nconst StyledDesktop = styled.div`\n    position: absolute;\n    top: 90px;\n    left: 24px;\n`;\n\nconst Spacer = styled.div`\n    height: 70px;\n    width: 10px;\n`;\n\nconst StyledShorcut = styled.div`\n    display: flex;\n\talign-items: center;\n    flex-direction: column;\n    ${Cursor.Pointer};\n    padding-bottom: 4px;\n\n    div {\n        margin: 4px auto;\n        text-align: center;\n    }\n`;","import React from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Warning\n} from '@react95/icons';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalConnectionFail({\n    setShow\n}: ModalType) {\n    return (\n        <Modal\n            icon={<Warning variant=\"32x32_4\" />}\n            title=\"Metamask Connection Failed\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"300\"\n            defaultPosition={{\n                x: 30,\n                y: 10,\n            }}\n            buttons={[\n                { value: 'Ok', onClick: () => setShow(false) },\n            ]}\n        >\n            <Frame width={300 - 20} height=\"100%\" padding={4}>\n                <Frame height=\"100%\" boxShadow=\"in\" bg=\"#0827F5\">\n                    Connection failed, please refresh and try again\n                </Frame>\n            </Frame>\n        </Modal>\n    );\n}","import React from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Pbrush1\n} from '@react95/icons';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalMint({\n    setShow\n}: ModalType) {\n    return (<>\n        <Modal\n            icon={<Pbrush1 variant=\"32x32_4\" />}\n            title=\"Mint.exe\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"400\"\n            defaultPosition={{\n                x: 40,\n                y: 50,\n            }}\n        >\n            <Frame width=\"600\" height=\"100%\" padding={4}>\n                mint\n            </Frame>\n        </Modal>\n    </>);\n}","import React from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    \n} from '@react95/icons';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalPotatoPreview({\n    setShow\n}: ModalType) {\n    return (<>\n        \n    </>);\n}","import React, { useState } from 'react';\nimport { Modal, Frame, TextArea, Tabs, Tab } from '@react95/core';\nimport { \n    HelpBook,\n} from '@react95/icons';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalPotatoLore({\n    setShow\n}: ModalType) {\n\n    const [text, setValue] = useState(\"It used to be a simpler time for potatoes. Their lives were spent in cool, dark rooms where they waited patiently to fulfill their ultimate purpose: to become a delicious helping of hash browns or an order of cheese fries. It was the life every potato wanted -- the life they deserved. \\n\\nBut then a *certain* wild-eyed tech billionaire spent an afternoon at a seventh grade science fair and found out that a potato can also act as a battery. That night, the billionaire tweeted that he alone had invented potato battery technology and that spuds were the fuel of the future. The billionaire’s company stock went through the roof, and immediately his most loyal followers, the Apes, began hunting these innocent potatoes. They raided root cellars by the thousands. Soon enough, millions of potatoes were kidnapped and torn from their families, ruining the spuds’ dreams of one day becoming a nice soup. \\n\\nNow, no dark pantry floor is safe, and potatoes have been forced to hide in plain sight. They have gathered whatever disguises they can find, but sadly the Spirit Halloween mall kiosk has a very limited selection. By day they wander the streets among us, but by night they retreat to their brown paper bag camps, hoping to rise to their ultimate calling of being baked and loaded before they develop too many eyes.\");\n    const [tokenInfo, setTokenInfo] = useState(\"7000 Potatoes Waiting for New Homes, more info soon!\");\n\n    return (\n        <Modal\n            icon={<HelpBook variant=\"32x32_4\" />}\n            title=\"About\"\n            closeModal={() => setShow(false)}\n            width=\"384\"\n            height=\"540\"\n            defaultPosition={{\n                x: 45,\n                y: 25,\n            }}\n            buttons={[\n                { value: 'k thx', onClick: () => setShow(false) },\n            ]}\n        >\n            <Tabs style={{ width: 350 }} defaultActiveTab=\"Lore\">\n                <Tab title=\"Lore\">\n                    {/*@ts-ignore*/}\n                    <TextArea\n                        rows={25}\n                        cols={40}\n                        value={text}\n                        onChange={({\n                            target: { value },\n                        }: React.ChangeEvent<HTMLTextAreaElement>) => setValue(value)}\n                    />\n                </Tab>\n                <Tab title=\"Tokenomics\">\n                    {/*@ts-ignore*/}\n                    <TextArea\n                        rows={25}\n                        cols={40}\n                        value={tokenInfo}\n                        onChange={({\n                            target: { value },\n                        }: React.ChangeEvent<HTMLTextAreaElement>) => setTokenInfo(value)}\n                    />\n                </Tab>\n            </Tabs>\n        </Modal>\n    )\n}","export default __webpack_public_path__ + \"static/media/construction.cd643a08.gif\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Frame } from '@react95/core';\nimport { Warning } from '@react95/icons';\nimport construction from '../image/construction.gif';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction randomInteger(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function ModalUnderConstruction({\n    setShow\n}: ModalType) {\n    const [x, setX] = useState(randomInteger(1, 20));\n    const [y, setY] = useState(randomInteger(40, 100));\n\n    useEffect(() => {\n        setX(randomInteger(1, 20));\n        setY(randomInteger(40, 100));\n    }, [])\n\n    return (\n        <Modal\n            icon={<Warning variant=\"32x32_4\" />}\n            title=\"Under Construction\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"300\"\n            defaultPosition={{\n                x,\n                y,\n            }}\n            buttons={[\n                { value: 'Ok', onClick: () => setShow(false) },\n            ]}\n        >\n            <Frame width={300 - 20} height=\"100%\" padding={4}>\n                <Frame height=\"100%\" boxShadow=\"in\" bg=\"#0827F5\">\n                    <StyledMessage>\n                        <img src={construction} alt=\"construction\" width=\"200\" />\n                    </StyledMessage>\n                </Frame>\n            </Frame>\n        </Modal>\n    );\n}\n\nconst StyledMessage = styled.div`\n    text-align: center;\n\n    img {\n        margin: 15px auto;\n    }\n`;","// iframe to the site\nimport React from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Msnstart120\n} from '@react95/icons';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalWww({\n    setShow\n}: ModalType) {\n    return (\n        <Modal\n            icon={<Msnstart120 variant=\"32x32_4\" />}\n            title=\"World Wide Web\"\n            closeModal={() => setShow(false)}\n            width=\"800\"\n            height=\"700\"\n            defaultPosition={{\n                x: 40,\n                y: 0,\n            }}\n        >\n            <Frame width=\"600\" height=\"100%\" padding={4}>\n                <iframe src=\"https://www.papertato.com/\" width=\"778\" height=\"100%\">Loading...</iframe>\n            </Frame>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { \n    injected, \n    Desktop, \n    Taskbar \n} from '../component';\nimport { useWeb3React } from '@web3-react/core';\nimport { \n    ModalWww,\n    ModalUnderConstruction,\n    ModalConnectionFail,\n    ModalMint,\n    ModalPotatoLore,\n    ModalPotatoPreview\n} from '../component';\n\n\n// traits - How rare is my papertato?\n// lore\n// team \n// button to mint - throw up a screen that says minting time to be \n// determined, follow on twitter / join on discord for announcements\n\n\nexport function HomePage() {\n    const { activate } = useWeb3React();\n\n    const [activateAttempted, setActivateAttempted] = useState(false);\n    \n    const [showConnectionFail, setShowConnectionFail] = useState(false);\n    const [showMint, setShowMint] = useState(false);\n    const [showPotatoLore, setShowPotatoLore] = useState(false);\n    const [showPotatoPreview, setShowPotatoPreview] = useState(false);\n    const [showUnderConstruction, setShowUnderConstruction] = useState(false);\n    const [showWww, setShowWww] = useState(false);\n\n    // see if user has already been authorized, if so then activate\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized: boolean) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setActivateAttempted(true);\n                })\n            } else {\n                setActivateAttempted(true);\n            }\n        });\n    }, []);\n\n    return (<>\n        <Desktop\n            setShowConnectionFail={setShowConnectionFail}\n            setShowMint={setShowMint}\n            setShowPotatoLore={setShowPotatoLore}\n            setShowPotatoPreview={setShowPotatoPreview}\n            setShowUnderConstruction={setShowUnderConstruction}\n            setShowWww={setShowWww}\n        />\n        <Taskbar \n            setShowConnectionFail={setShowConnectionFail}\n            setShowMint={setShowMint}\n            setShowPotatoLore={setShowPotatoLore}\n            setShowPotatoPreview={setShowPotatoPreview}\n            setShowUnderConstruction={setShowUnderConstruction}\n            setShowWww={setShowWww}\n        />\n\n        \n        {showWww && <ModalWww setShow={setShowWww} />}\n        {showMint && <ModalMint setShow={setShowMint} />}\n        {showPotatoLore && <ModalPotatoLore setShow={setShowPotatoLore} />}\n        {showPotatoPreview && <ModalPotatoPreview setShow={setShowPotatoPreview} />}\n        {showConnectionFail && <ModalConnectionFail setShow={setShowConnectionFail} />}\n        {showUnderConstruction && <ModalUnderConstruction setShow={setShowUnderConstruction} />}\n    </>);\n}","import React from 'react';\nimport { ethers } from \"ethers\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { ThemeProvider, Cursor } from '@react95/core';\nimport styled from 'styled-components';\nimport '@react95/icons/icons.css';\nimport wallpaper from './image/wallpaper.jpg';\n\nimport { HomePage } from './page';\n\nfunction App() {\n  // @ts-ignore\n  function getLibrary(provider, connector) {\n    const library = new ethers.providers.Web3Provider(provider)\n    library.pollingInterval = 12000\n    return library\n  }\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ThemeProvider theme=\"maple\">\n        <AppStyleOverrides>\n          <HomePage />\n        </AppStyleOverrides>\n      </ThemeProvider>\n    </Web3ReactProvider>\n  );\n}\n\nconst AppStyleOverrides = styled.div`\n  background: url(${wallpaper});\n  background-repeat: repeat;\n  background-size: cover !important;\n  background-position: center;\n  min-height: 100%;\n  width: 100%;\n  ${Cursor.Auto};\n\n  button, button:hover {\n    ${Cursor.Auto};\n  }\n`;\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}