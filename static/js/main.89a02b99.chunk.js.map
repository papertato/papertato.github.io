{"version":3,"sources":["image/wallpaper.jpg","component/ethOperations.tsx","component/taskbar.tsx","component/desktop.tsx","component/modalConnectionFail.tsx","component/modalMint.tsx","image/preview.gif","component/modalPotatoPreview.tsx","component/modalPotatoLore.tsx","image/construction.gif","component/modalUnderConstruction.tsx","component/modalWww.tsx","image/nudes.mp4","image/nudes.png","component/modalPotatoNudes.tsx","page/Home.tsx","App.tsx","index.tsx"],"names":["injected","InjectedConnector","supportedChainIds","Taskbar","setShowConnectionFail","setShowMint","setShowPotatoLore","setShowPotatoPreview","setShowUnderConstruction","setShowPotatoNudes","setShowWww","urlSearchParams","URLSearchParams","window","location","search","params","Object","fromEntries","entries","TaskBar","list","List","Item","icon","variant","onClick","dev","href","target","Divider","Desktop","StyledDesktop","StyledShorcut","className","Spacer","styled","div","Cursor","Pointer","ModalConnectionFail","setShow","Modal","title","closeModal","width","height","defaultPosition","x","y","buttons","value","Frame","padding","boxShadow","bg","ModalMint","useState","mintCount","setMintCount","plural","setPlural","useEffect","StyledFieldContainer","Fieldset","legend","style","RadioButtonList","RadioButton","name","checked","onChange","StyledBottomRow","textAlign","toFixed","StyledButton","Button","ModalPotatoPreview","innerWidth","src","preview","ModalPotatoLore","text","setValue","tokenInfo","setTokenInfo","team","setTeam","Wrap","Tabs","defaultActiveTab","Tab","TextArea","rows","cols","randomInteger","min","max","Math","floor","random","ModalUnderConstruction","setX","setY","StyledMessage","construction","alt","ModalWww","param","nanoid","ModalPotatoNudes","Video","videofile","videoProps","playsInline","poster","nudesImg","autoPlay","loop","HomePage","activate","useWeb3React","setActivateAttempted","showConnectionFail","showMint","showPotatoLore","showPotatoPreview","showPotatoNudes","showUnderConstruction","showWww","mixpanel","track","isAuthorized","then","undefined","catch","AppStyleOverrides","wallpaper","Auto","App","getLibrary","provider","connector","library","ethers","providers","Web3Provider","pollingInterval","ThemeProvider","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a02b99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wallpaper.45442a57.jpg\";","import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3] });\n\nexport function blockNumber() {\n    return '';\n}","import React, { useState } from 'react';\nimport { TaskBar, List } from '@react95/core';\nimport { \n    ReaderClosed, \n    WindowsExplorer, \n    Computer3, \n    FolderExe2, \n    Pbrush1, \n    HelpBook, \n    Msnstart120, \n    Network3,\n    Mmsys108, \n    Textchat2, \n    Camera, \n    ReaderCd,\n    Access219\n} from '@react95/icons';\n\ntype ModalsType = {\n    setShowConnectionFail: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowMint: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoLore: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoPreview: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoNudes: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowUnderConstruction: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowWww: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function Taskbar({\n    setShowConnectionFail,\n    setShowMint,\n    setShowPotatoLore,\n    setShowPotatoPreview,\n    setShowPotatoNudes,\n    setShowUnderConstruction,\n    setShowWww\n}: ModalsType) {    \n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    return (\n        <TaskBar\n            list={\n                <List>\n                    <List.Item icon={<FolderExe2 variant=\"32x32_4\" />}>\n                        <List>\n                            <List.Item icon={<Pbrush1 variant=\"32x32_4\" />} onClick={() => params?.dev == 'true' ? setShowMint(true) : setShowUnderConstruction(true)}>\n                                Mint.exe\n                            </List.Item>\n                            <List.Item icon={<Access219 variant=\"32x32_4\" />} onClick={() => setShowPotatoPreview(true)}>\n                                Demo.exe\n                            </List.Item>\n                        </List>\n                        Programs\n                    </List.Item>\n\n                    <List.Item icon={<Msnstart120 variant=\"32x32_4\" />} onClick={() => { setShowWww(true); }}>\n                        World Wide Web\n                    </List.Item>\n\n                    <List.Item icon={<Network3 variant=\"32x32_4\" />}>\n                        <List>\n                            <a href=\"https://twitter.com/papertato\" target=\"_blank\">\n                                <List.Item icon={<Textchat2 variant=\"32x32_4\" />}>\n                                        Twitter.html\n                                </List.Item>\n                            </a>\n                            <a href=\"https://discord.gg/2Z75YRxH4H\" target=\"_blank\">\n                                <List.Item icon={<Mmsys108 variant=\"32x32_4\" />}>\n                                    Discord.js\n                                </List.Item>\n                            </a>\n                            <a href=\"https://www.instagram.com/makepotato/\" target=\"_blank\">\n                                <List.Item icon={<Camera variant=\"32x32_4\" />}>\n                                    Instagram.php\n                                </List.Item>\n                            </a>\n                        </List>\n                        Social\n                    </List.Item>\n\n                    <List.Item icon={<HelpBook variant=\"32x32_4\" />} onClick={() => { setShowPotatoLore(true); }}>\n                        About\n                    </List.Item>\n\n                    <List.Divider />\n                    \n                    <List.Item icon={<Computer3 variant=\"32x32_4\" />} onClick={() => { setShowUnderConstruction(true); }}>\n                        Shut Down...\n                    </List.Item>\n                </List>\n            }\n        />\n    );\n      \n}\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Mmsys108, Pbrush1, Textchat2, Camera, ReaderCd } from '@react95/icons';\nimport { Cursor } from '@react95/core';\n\ntype ModalsType = {\n    setShowConnectionFail: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowMint: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoLore: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoPreview: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowPotatoNudes: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowUnderConstruction: React.Dispatch<React.SetStateAction<boolean>>;\n    setShowWww: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function Desktop({\n    setShowConnectionFail,\n    setShowMint,\n    setShowPotatoLore,\n    setShowPotatoPreview,\n    setShowPotatoNudes,\n    setShowUnderConstruction,\n    setShowWww\n}: ModalsType) {\n\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    return (\n        <>\n            <StyledDesktop>\n                <StyledShorcut onClick={() => params?.dev == 'true' ? setShowMint(true) : setShowUnderConstruction(true)}>\n                    <Pbrush1\n                        className=\"pointer\"\n                        onClick={() => {}}\n                        variant=\"32x32_4\"\n                    />\n                    <div>Mint.exe</div>\n                </StyledShorcut>\n\n                <StyledShorcut onClick={() => setShowPotatoNudes(true)}>\n                    <ReaderCd\n                        className=\"pointer\"\n                        onClick={() => {}}\n                        variant=\"32x32_4\"\n                    />\n                    <div>Homework (D:)</div>\n                </StyledShorcut>\n\n                <Spacer />\n\n                <a href=\"https://twitter.com/papertato\" target=\"_blank\">\n                    <StyledShorcut>\n                        <Textchat2\n                            className=\"pointer\"\n                            onClick={() => {}}\n                            variant=\"32x32_4\"\n                        />\n                        <div>Twitter.html</div>\n                    </StyledShorcut>\n                </a>\n\n                <a href=\"https://discord.gg/2Z75YRxH4H\" target=\"_blank\">\n                    <StyledShorcut>\n                        <Mmsys108\n                            className=\"pointer\"\n                            onClick={() => {}}\n                            variant=\"32x32_4\"\n                        />\n                        <div>Discord.js</div>\n                    </StyledShorcut>\n                </a>\n\n                <a href=\"https://www.instagram.com/makepotato/\" target=\"_blank\">\n                    <StyledShorcut>\n                        <Camera\n                            className=\"pointer\"\n                            onClick={() => {}}\n                            variant=\"32x32_4\"\n                        />\n                        <div>Instagram.php</div>\n                    </StyledShorcut>\n                </a>\n            </StyledDesktop>\n        </>\n    );\n} \n\n\nconst StyledDesktop = styled.div`\n    position: absolute;\n    top: 90px;\n    left: 24px;\n`;\n\nconst Spacer = styled.div`\n    height: 70px;\n    width: 10px;\n`;\n\nconst StyledShorcut = styled.div`\n    display: flex;\n\talign-items: center;\n    flex-direction: column;\n    ${Cursor.Pointer};\n    padding-bottom: 4px;\n\n    div {\n        margin: 4px auto;\n        text-align: center;\n    }\n`;","import React from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Warning\n} from '@react95/icons';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalConnectionFail({\n    setShow\n}: ModalType) {\n    return (\n        <Modal\n            icon={<Warning variant=\"32x32_4\" />}\n            title=\"Metamask Connection Failed\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"300\"\n            defaultPosition={{\n                x: 30,\n                y: 10,\n            }}\n            buttons={[\n                { value: 'Ok', onClick: () => setShow(false) },\n            ]}\n        >\n            <Frame width={300 - 20} height=\"100%\" padding={4}>\n                <Frame height=\"100%\" boxShadow=\"in\" bg=\"#0827F5\">\n                    Connection failed, please refresh and try again\n                </Frame>\n            </Frame>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Frame, Fieldset, RadioButton, Button } from '@react95/core';\nimport { \n    Pbrush1\n} from '@react95/icons';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalMint({\n    setShow\n}: ModalType) {\n    const [mintCount, setMintCount] = useState(1);\n    const [plural, setPlural] = useState('');\n    const priceEth = 0.05;\n\n    useEffect(() => {\n        if (mintCount > 1) {\n            setPlural('es');\n        } else {\n            setPlural('');\n        }\n    }, [mintCount]);\n\n    return (<>\n        <Modal\n            icon={<Pbrush1 variant=\"32x32_4\" />}\n            title=\"Mint.exe\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"400\"\n            defaultPosition={{\n                x: 40,\n                y: 50,\n            }}\n        >\n            <Frame width=\"288\" height=\"100%\" padding={4} boxShadow=\"in\">\n                <StyledFieldContainer>\n                    <Fieldset legend=\"Potato Count\" style={{ width: '250px' }}>\n                        <RadioButtonList>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"1\"\n                                checked={mintCount === 1}\n                                onChange={() => setMintCount(1)}\n                            >\n                                🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"2\"\n                                checked={mintCount === 2}\n                                onChange={() => setMintCount(2)}\n                            >\n                                🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"3\"\n                                checked={mintCount === 3}\n                                onChange={() => setMintCount(3)}\n                            >\n                                🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"4\"\n                                checked={mintCount === 4}\n                                onChange={() => setMintCount(4)}\n                            >\n                                🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"5\"\n                                checked={mintCount === 5}\n                                onChange={() => setMintCount(5)}\n                            >\n                                🥔🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"6\"\n                                checked={mintCount === 6}\n                                onChange={() => setMintCount(6)}\n                            >\n                                🥔🥔🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"7\"\n                                checked={mintCount === 7}\n                                onChange={() => setMintCount(7)}\n                            >\n                                🥔🥔🥔🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"8\"\n                                checked={mintCount === 8}\n                                onChange={() => setMintCount(8)}\n                            >\n                                🥔🥔🥔🥔🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"9\"\n                                checked={mintCount === 9}\n                                onChange={() => setMintCount(9)}\n                            >\n                                🥔🥔🥔🥔🥔🥔🥔🥔🥔\n                            </RadioButton>\n                            <RadioButton\n                                name=\"working\"\n                                value=\"10\"\n                                checked={mintCount === 10}\n                                onChange={() => setMintCount(10)}\n                            >\n                                🥔🥔🥔🥔🥔🥔🥔🥔🥔🥔\n                            </RadioButton>\n                        </RadioButtonList>\n                    </Fieldset>\n                </StyledFieldContainer>\n\n                <StyledBottomRow>\n                    <StyledFieldContainer className=\"eth child\">\n                        <Fieldset legend=\"ETH\" style={{ width: '116px', textAlign: 'center' }}>\n                            {(priceEth * mintCount).toFixed(2)}\n                        </Fieldset>\n                    </StyledFieldContainer>\n\n                    <StyledButton className=\"child\">\n                        <Button>Mint Potato{plural}</Button>\n                    </StyledButton>\n                </StyledBottomRow>\n            </Frame>\n        </Modal>\n    </>);\n}\n\nconst StyledButton = styled.div`\n    height: 40px;\n    width: 105px;\n    margin-top: 11px;\n    button {\n        height: 40px;\n        width: 105px;\n    }\n`;\n\nconst StyledFieldContainer = styled.div`\n    margin-top: 5px;\n\n    &.eth {\n        margin-top: 6px;\n        margin-right: 11px;\n    }\n`;\n\nconst StyledBottomRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst RadioButtonList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","export default __webpack_public_path__ + \"static/media/preview.5da95d0b.gif\";","import React, { useEffect, useState } from 'react';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Access219\n} from '@react95/icons';\nimport preview from '../image/preview.gif';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalPotatoPreview({\n    setShow\n}: ModalType) {\n    let x = 125;\n\n    if (window?.innerWidth < 450) {\n        x = 10;\n    } else {\n        x = 125;\n    }\n\n    return (\n        <Modal\n            icon={<Access219 variant=\"32x32_4\" />}\n            title=\"Demo.exe\"\n            closeModal={() => setShow(false)} \n            width=\"300\"\n            height=\"320\"\n            defaultPosition={{\n                x,\n                y: 50,\n            }}\n        >\n            <Frame width=\"300\" height=\"100%\" padding={4}>\n                <img src={preview} height=\"280\" width=\"280\" />\n            </Frame> \n        </Modal>\n    );\n}","import React, { useState } from 'react';\nimport { Modal, Frame, TextArea, Tabs, Tab } from '@react95/core';\nimport styled from 'styled-components';\nimport { \n    HelpBook,\n} from '@react95/icons';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalPotatoLore({\n    setShow\n}: ModalType) {\n    let x = 235;\n\n    if (window?.innerWidth < 580) {\n        x = 2;\n    } else {\n        x = 235;\n    }\n\n    const [text, setValue] = useState(\"It used to be a simpler time for potatoes. Their lives were spent in cool, dark rooms where they waited patiently to fulfill their ultimate purpose: to become a delicious helping of hash browns or an order of cheese fries. It was the life every potato wanted -- the life they deserved. \\n\\nBut then a *certain* wild-eyed tech billionaire spent an afternoon at a seventh grade science fair and found out that a potato can also act as a battery. That night, the billionaire tweeted that he alone had invented potato battery technology and that spuds were the fuel of the future. The billionaire’s company stock went through the roof, and immediately his most loyal followers, the Apes, began hunting these innocent potatoes. They raided root cellars by the thousands. Soon enough, millions of potatoes were kidnapped and torn from their families, ruining the spuds’ dreams of one day becoming a nice soup. \\n\\nNow, no dark pantry floor is safe, and potatoes have been forced to hide in plain sight. They have gathered whatever disguises they can find, but sadly the Spirit Halloween mall kiosk has a very limited selection. By day they wander the streets among us, but by night they retreat to their brown paper bag camps, hoping to rise to their ultimate calling of being baked and loaded before they develop too many eyes.\");\n    const [tokenInfo, setTokenInfo] = useState(\"=== Overview === \\n\\n7000 Potatoes Waiting for new homes, each and every one is unique. Some PaperTatos are custom anomalies, possessing one-of-a-kind traits. Rarity tooling will be supported post-drop. \\n\\n\\n=== Roadmap === \\n\\n10% Sales - A *very* special PaperTato is sent a random address that mints one of the first 700 PaperTatos. \\n\\n20% Sales - 2 ETH donation to EFF \\n\\n50% Sales - 2 ETH donation to charitable organization, community decides \\n\\n80% Sales - Land is purchased (CryptoVoxels or Sandbox), dedicated and developed for PaperTatos. \\n\\n100% Sales - PaperTatos merch is created and made available, because at this point it\\'s the logical thing to do\");\n    const [team, setTeam] = useState('The PaperTato team is mostly potatoes (what did you expect?), but it\\'s pretty likely that there are also NFT Designers and Internet Janitors somewhere in the mix.');\n\n    return (\n        <Modal\n            icon={<HelpBook variant=\"32x32_4\" />}\n            title=\"About\"\n            closeModal={() => setShow(false)}\n            width=\"384\"\n            height=\"540\"\n            defaultPosition={{\n                x,\n                y: -10,\n            }}\n            buttons={[\n                { value: 'OK', onClick: () => setShow(false) },\n            ]}\n        >\n            <Wrap>\n                <Tabs style={{ width: 350 }} defaultActiveTab=\"Lore\">\n                    <Tab title=\"Lore\">\n                        {/*@ts-ignore*/}\n                        <TextArea\n                            className=\"textarea\"\n                            rows={25}\n                            cols={40}\n                            value={text}\n                            onChange={({\n                                target: { value },\n                            }: React.ChangeEvent<HTMLTextAreaElement>) => setValue(value)}\n                        />\n                    </Tab>\n                    <Tab title=\"Business Potato\">\n                        {/*@ts-ignore*/}\n                        <TextArea\n                            className=\"textarea\"\n                            rows={25}\n                            cols={40}\n                            value={tokenInfo}\n                            onChange={({\n                                target: { value },\n                            }: React.ChangeEvent<HTMLTextAreaElement>) => setTokenInfo(value)}\n                        />\n                    </Tab>\n                    <Tab title=\"Team\">\n                        {/*@ts-ignore*/}\n                        <TextArea\n                            className=\"textarea\"\n                            rows={25}\n                            cols={40}\n                            value={team}\n                            onChange={({\n                                target: { value },\n                            }: React.ChangeEvent<HTMLTextAreaElement>) => setTeam(value)}\n                        />\n                    </Tab>\n                </Tabs>\n            </Wrap>\n        </Modal>\n    )\n}\n\nconst Wrap = styled.div`\n    .textarea {\n        width: 345px;\n        height: 408px;\n    }\n`;","export default __webpack_public_path__ + \"static/media/construction.cd643a08.gif\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Frame } from '@react95/core';\nimport { Warning } from '@react95/icons';\nimport construction from '../image/construction.gif';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction randomInteger(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function ModalUnderConstruction({\n    setShow\n}: ModalType) {\n    const [x, setX] = useState(randomInteger(1, 20));\n    const [y, setY] = useState(randomInteger(40, 100));\n\n    useEffect(() => {\n        setX(randomInteger(1, 20));\n        setY(randomInteger(40, 100));\n    }, [])\n\n    return (\n        <Modal\n            icon={<Warning variant=\"32x32_4\" />}\n            title=\"Under Construction\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"300\"\n            defaultPosition={{\n                x,\n                y,\n            }}\n            buttons={[\n                { value: 'Ok', onClick: () => setShow(false) },\n            ]}\n        >\n            <Frame width={300 - 20} height=\"100%\" padding={4}>\n                <Frame height=\"100%\" boxShadow=\"in\" bg=\"#0827F5\">\n                    <StyledMessage>\n                        <img src={construction} alt=\"construction\" width=\"200\" />\n                    </StyledMessage>\n                </Frame>\n            </Frame>\n        </Modal>\n    );\n}\n\nconst StyledMessage = styled.div`\n    text-align: center;\n\n    img {\n        margin: 15px auto;\n    }\n`;","// iframe to the site\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Modal, Frame } from '@react95/core';\nimport { \n    Msnstart120\n} from '@react95/icons';\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalWww({\n    setShow\n}: ModalType) {\n    const param = nanoid();\n\n    return (\n        <Modal\n            icon={<Msnstart120 variant=\"32x32_4\" />}\n            title=\"World Wide Web\"\n            closeModal={() => setShow(false)}\n            width=\"800\"\n            height=\"700\"\n            defaultPosition={{\n                x: 40,\n                y: 0,\n            }}\n        >\n            <Frame width=\"600\" height=\"100%\" padding={4}>\n                <iframe src={`https://www.papertato.com/?id=${param}`} width=\"778\" height=\"100%\">Loading...</iframe>\n            </Frame>\n        </Modal>\n    );\n}","export default __webpack_public_path__ + \"static/media/nudes.63ae8846.mp4\";","export default __webpack_public_path__ + \"static/media/nudes.a02d11e9.png\";","import React from 'react';\nimport { Modal, Frame, Video } from '@react95/core';\nimport { \n    ReaderCd\n} from '@react95/icons';\nimport videofile from '../image/nudes.mp4';\nimport nudesImg from '../image/nudes.png';\n\n\ntype ModalType = {\n    setShow: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function ModalPotatoNudes({\n    setShow\n}: ModalType) {\n    return (\n        <Modal\n            icon={<ReaderCd variant=\"32x32_4\" />}\n            title=\"Homework (D:)\"\n            closeModal={() => setShow(false)}\n            width=\"300\"\n            height=\"448\"\n            defaultPosition={{\n                x: 30,\n                y: 50,\n            }}\n        >\n            {/* @ts-ignore */}\n            <Video width=\"300\" src={videofile} name=\"Hot_potato_xxx.mp4\" videoProps={{playsInline: true, poster: `${nudesImg}`, autoPlay: true, loop: true}} />\n        </Modal>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { \n    injected, \n    Desktop, \n    Taskbar \n} from '../component';\nimport { useWeb3React } from '@web3-react/core';\nimport { \n    ModalWww,\n    ModalUnderConstruction,\n    ModalConnectionFail,\n    ModalMint,\n    ModalPotatoLore,\n    ModalPotatoPreview,\n    ModalPotatoNudes\n} from '../component';\n\n\n// traits - How rare is my papertato?\n// lore\n// team \n// button to mint - throw up a screen that says minting time to be \n// determined, follow on twitter / join on discord for announcements\n\n\nexport function HomePage() {\n    const { activate } = useWeb3React();\n\n    const [activateAttempted, setActivateAttempted] = useState(false);\n\n    const [showConnectionFail, setShowConnectionFail] = useState(false);\n    const [showMint, setShowMint] = useState(false);\n    const [showPotatoLore, setShowPotatoLore] = useState(false);\n    const [showPotatoPreview, setShowPotatoPreview] = useState(false);\n    const [showPotatoNudes, setShowPotatoNudes] = useState(false);\n    const [showUnderConstruction, setShowUnderConstruction] = useState(false);\n    const [showWww, setShowWww] = useState(false);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showMint: ${showMint}`);\n    }, [showMint]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showWww: ${showWww}`);\n    }, [showWww]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showConnectionFail: ${showConnectionFail}`);\n    }, [showConnectionFail]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showPotatoLore: ${showPotatoLore}`);\n    }, [showPotatoLore]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showPotatoPreview: ${showPotatoPreview}`);\n    }, [showPotatoPreview]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showPotatoNudes: ${showPotatoNudes}`);\n    }, [showPotatoNudes]);\n\n    useEffect(() => {\n        // @ts-ignore\n        if (mixpanel) mixpanel.track(`showUnderConstruction: ${showUnderConstruction}`);\n    }, [showUnderConstruction]);\n\n    // see if user has already been authorized, if so then activate\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized: boolean) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setActivateAttempted(true);\n                })\n            } else {\n                setActivateAttempted(true);\n            }\n        });\n\n        setShowPotatoLore(true);\n        setShowPotatoPreview(true);\n    }, []);\n\n    return (<>\n        <Desktop\n            setShowConnectionFail={setShowConnectionFail}\n            setShowMint={setShowMint}\n            setShowPotatoLore={setShowPotatoLore}\n            setShowPotatoPreview={setShowPotatoPreview}\n            setShowUnderConstruction={setShowUnderConstruction}\n            setShowWww={setShowWww}\n            setShowPotatoNudes={setShowPotatoNudes}\n        />\n        <Taskbar \n            setShowConnectionFail={setShowConnectionFail}\n            setShowMint={setShowMint}\n            setShowPotatoLore={setShowPotatoLore}\n            setShowPotatoPreview={setShowPotatoPreview}\n            setShowUnderConstruction={setShowUnderConstruction}\n            setShowWww={setShowWww}\n            setShowPotatoNudes={setShowPotatoNudes}\n        />\n\n        \n        {showWww && <ModalWww setShow={setShowWww} />}\n        {showMint && <ModalMint setShow={setShowMint} />}\n        {showPotatoLore && <ModalPotatoLore setShow={setShowPotatoLore} />}\n        {showPotatoPreview && <ModalPotatoPreview setShow={setShowPotatoPreview} />}\n        {showConnectionFail && <ModalConnectionFail setShow={setShowConnectionFail} />}\n        {showUnderConstruction && <ModalUnderConstruction setShow={setShowUnderConstruction} />}\n        {showPotatoNudes && <ModalPotatoNudes setShow={setShowPotatoNudes} />}\n    </>);\n}","import React, { useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { ThemeProvider, Cursor } from '@react95/core';\nimport styled from 'styled-components';\nimport '@react95/icons/icons.css';\nimport wallpaper from './image/wallpaper.jpg';\n// import mixpanel from 'mixpanel-browser';\nimport { HomePage } from './page';\n// mixpanel.init(\"a4ba5649d672ab6964e61d4c4f37bb5e\");\n\nfunction App() {\n  // @ts-ignore\n  function getLibrary(provider, connector) {\n    const library = new ethers.providers.Web3Provider(provider)\n    library.pollingInterval = 12000\n    return library\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    if (mixpanel) mixpanel.track('App Loaded');\n  });\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ThemeProvider theme=\"maple\">\n        <AppStyleOverrides>\n          <HomePage />\n        </AppStyleOverrides>\n      </ThemeProvider>\n    </Web3ReactProvider>\n  );\n}\n\nconst AppStyleOverrides = styled.div`\n  background: url(${wallpaper});\n  background-repeat: repeat;\n  background-size: cover !important;\n  background-position: center;\n  min-height: 100%;\n  width: 100%;\n  ${Cursor.Auto};\n\n  button, button:hover, label, label:hover, input {\n    ${Cursor.Auto};\n  }\n`;\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}